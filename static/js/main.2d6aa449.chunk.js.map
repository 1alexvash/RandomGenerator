{"version":3,"sources":["sounds/diceRoll.mp3","sounds/coinDrop.mp3","images/head.png","images/tail.png","images/menu_coin.png","images/menu_dice.png","images/menu_numbers.png","components/Coin.js","components/DiceCube.js","components/Dice.js","Layouts/Spinner.js","components/Numbers.js","Layouts/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Coin","useState","coin","setCoin","coinText","setCoinText","animate","setAnimate","flipCoin","side","Math","random","sound","melody","Audio","currentTime","play","playSound","coinSound","setTimeout","className","style","backgroundImage","HeadImg","TailImg","onClick","DiceCube","position","Dice","setPosition","disabled","ceil","diceSound","Spinner","Numbers","min","setMin","max","setMax","result","setResult","showSpinner","setShowSpinner","warning","setWarning","updateValue","e","input","value","parseInt","target","onSubmit","preventDefault","round","type","required","onChange","Menu","pathname","useLocation","to","src","CoinImg","alt","DiceImg","NumberImg","App","showComponents","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d6aa449.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/diceRoll.82fe074e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/coinDrop.56418137.mp3\";","module.exports = __webpack_public_path__ + \"static/media/head.bfedd519.png\";","module.exports = __webpack_public_path__ + \"static/media/tail.2b7b4b6f.png\";","module.exports = __webpack_public_path__ + \"static/media/menu_coin.5d68650e.png\";","module.exports = __webpack_public_path__ + \"static/media/menu_dice.7ccb9f14.png\";","module.exports = __webpack_public_path__ + \"static/media/menu_numbers.9bf6c82a.png\";","import React, { useState } from \"react\";\r\n\r\nimport coinSound from \"../sounds/coinDrop.mp3\";\r\n\r\nimport HeadImg from \"../images/head.png\";\r\nimport TailImg from \"../images/tail.png\";\r\n\r\n// ADD PICTURE INSTEAD OF CIRCLE\r\n// ANIMATE PICTURE\r\n\r\nconst Coin = () => {\r\n  const [coin, setCoin] = useState(\"\");\r\n  const [coinText, setCoinText] = useState(\"---\");\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  const playSound = (sound) => {\r\n    const melody = new Audio(sound);\r\n    melody.currentTime = 0;\r\n    melody.play();\r\n  };\r\n\r\n  function flipCoin() {\r\n    if (!animate) {\r\n      const side = Math.random() > 0.5 ? \"Heads\" : \"Tails\";\r\n      setAnimate(true);\r\n      playSound(coinSound);\r\n      setCoinText(\"...\");\r\n      setTimeout(() => {\r\n        setCoin(side);\r\n      }, 1000);\r\n      setTimeout(() => {\r\n        setAnimate(false);\r\n        setCoinText(side);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Coin\">\r\n      <div\r\n        className={`picture ${animate ? \"active\" : \"\"}`}\r\n        style={{\r\n          backgroundImage: `url(${coin === \"Heads\" ? HeadImg : TailImg})`,\r\n        }}\r\n      ></div>\r\n      <div className=\"result\">{coinText}</div>\r\n      <button\r\n        className={`throw ${animate ? \"disabled\" : \"\"}`}\r\n        onClick={() => flipCoin()}\r\n      >\r\n        Throw a coin\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import React from \"react\";\r\n\r\nimport diceSound from \"../sounds/diceRoll.mp3\";\r\n\r\nconst DiceCube = ({ position }) => (\r\n  <div className=\"dice-container\">\r\n    <div className={`dice position-${position}`}>\r\n      <div className=\"front\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"back\">\r\n        <span></span>\r\n      </div>\r\n      <div className=\"right\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"left\">\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"top\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default DiceCube;\r\n","import React, { useState } from \"react\";\r\n\r\nimport DiceCube from \"./DiceCube\";\r\n\r\nimport diceSound from \"../sounds/diceRoll.mp3\";\r\n\r\nconst Dice = () => {\r\n  const [position, setPosition] = useState(0);\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  const getRandomNumber = () => Math.ceil(Math.random() * 6);\r\n\r\n  const playSound = (sound) => {\r\n    const melody = new Audio(sound);\r\n    melody.currentTime = 0;\r\n    melody.play();\r\n  };\r\n\r\n  const throwingDice = () => {\r\n    setAnimate(true);\r\n\r\n    setPosition(0); // hack to start over the animation\r\n    setTimeout(() => {\r\n      setPosition(getRandomNumber());\r\n      playSound(diceSound);\r\n    }, 10);\r\n    setTimeout(() => {\r\n      setAnimate(false);\r\n    }, 4000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Dice\">\r\n      <div className=\"cube\">\r\n        <DiceCube position={position} animate={animate} />\r\n      </div>\r\n      <button\r\n        className={`throw ${animate ? \"disabled\" : \"\"}`}\r\n        disabled={animate}\r\n        onClick={throwingDice}\r\n      >\r\n        Throw a dice\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dice;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => <div className=\"Spinner\">Loading...</div>;\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Spinner from \"../Layouts/Spinner\";\r\n\r\nconst Numbers = () => {\r\n  const [min, setMin] = useState(0);\r\n  const [max, setMax] = useState(100);\r\n\r\n  const [result, setResult] = useState(null);\r\n\r\n  const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n  const [warning, setWarning] = useState(\"\");\r\n\r\n  const generateRandom = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (min < max) {\r\n      setShowSpinner(true);\r\n\r\n      setWarning(\"\");\r\n      setResult(null);\r\n      setTimeout(() => {\r\n        setResult(Math.round(Math.random() * (max - min)) + min);\r\n        setShowSpinner(false);\r\n      }, 1000);\r\n    } else {\r\n      setWarning(\"Min value should be less than maximum value\");\r\n    }\r\n  };\r\n\r\n  const updateValue = (e, input) => {\r\n    if (showSpinner) return;\r\n\r\n    const value = parseInt(e.target.value);\r\n    e.target.value = value;\r\n\r\n    if (input === \"min\") {\r\n      setMin(value);\r\n    }\r\n\r\n    if (input === \"max\") {\r\n      setMax(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={generateRandom} className=\"Numbers\">\r\n      <div className=\"flex-wrapper\">\r\n        <div>\r\n          <p>From:</p>\r\n          <input\r\n            type=\"number\"\r\n            value={min || 0}\r\n            min=\"0\"\r\n            required\r\n            onChange={(e) => updateValue(e, \"min\")}\r\n          />\r\n        </div>\r\n        <div>\r\n          <p>To:</p>\r\n          <input\r\n            type=\"number\"\r\n            value={max || 0}\r\n            min=\"0\"\r\n            required\r\n            onChange={(e) => updateValue(e, \"max\")}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"warning\">{warning}</div>\r\n      <div className=\"results\">{result}</div>\r\n      {showSpinner ? (\r\n        <Spinner />\r\n      ) : (\r\n        <button type=\"submit\" className=\"generate\">\r\n          Generate a number\r\n        </button>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\n\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nimport CoinImg from \"../images/menu_coin.png\";\r\nimport DiceImg from \"../images/menu_dice.png\";\r\nimport NumberImg from \"../images/menu_numbers.png\";\r\n\r\nconst Menu = () => {\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n\r\n  return (\r\n    <div className=\"Menu\">\r\n      <Link to=\"/coin\" className={pathname === \"/coin\" ? \"active\" : \"\"}>\r\n        <img src={CoinImg} alt=\"\" /> Coin\r\n      </Link>\r\n      <Link to=\"/dice\" className={pathname === \"/dice\" ? \"active\" : \"\"}>\r\n        <img src={DiceImg} alt=\"\" /> Dice\r\n      </Link>\r\n      <Link to=\"/number\" className={pathname === \"/number\" ? \"active\" : \"\"}>\r\n        <img src={NumberImg} alt=\"\" /> Number\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\n\nimport \"./scss/main.css\";\n\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport Coin from \"./components/Coin\";\nimport Dice from \"./components/Dice\";\nimport Numbers from \"./components/Numbers\";\n\nimport Menu from \"./Layouts/Menu\";\n\nconst App = () => {\n  const showComponents = (\n    <div className=\"container\">\n      <Route path=\"/coin\" component={Coin} />\n      <Route path=\"/dice\" component={Dice} />\n      <Route path=\"/number\" component={Numbers} />\n    </div>\n  );\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {showComponents}\n        <Menu />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}